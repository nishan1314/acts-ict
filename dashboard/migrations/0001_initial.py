# Generated by Django 4.2.7 on 2025-09-07 08:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('division', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('organization_type', models.CharField(choices=[('buyer', 'Government Buyer'), ('supplier', 'Supplier/Contractor'), ('both', 'Both Buyer and Supplier')], max_length=10)),
                ('registration_number', models.CharField(blank=True, max_length=50)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.district')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TenderCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Tender Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tender_id', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('estimated_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('award_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('currency', models.CharField(default='BDT', max_length=3)),
                ('publication_date', models.DateTimeField()),
                ('submission_deadline', models.DateTimeField()),
                ('opening_date', models.DateTimeField()),
                ('award_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('published', 'Published'), ('closed', 'Closed'), ('awarded', 'Awarded'), ('cancelled', 'Cancelled')], default='published', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bought_tenders', to='dashboard.organization')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.tendercategory')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_tenders', to='dashboard.organization')),
            ],
            options={
                'ordering': ['-publication_date'],
            },
        ),
        migrations.CreateModel(
            name='RiskScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('single_bid_flag', models.BooleanField(default=False)),
                ('short_window_flag', models.BooleanField(default=False)),
                ('repeated_pair_flag', models.BooleanField(default=False)),
                ('high_value_flag', models.BooleanField(default=False)),
                ('single_bid_score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('short_window_score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('repeated_pair_score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('network_risk_score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_risk_score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], default='low', max_length=10)),
                ('analysis_date', models.DateTimeField(auto_now=True)),
                ('analysis_version', models.CharField(default='1.0', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tender', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='risk_score', to='dashboard.tender')),
            ],
            options={
                'ordering': ['-total_risk_score'],
            },
        ),
        migrations.CreateModel(
            name='TenderBid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bid_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('submission_date', models.DateTimeField()),
                ('is_winner', models.BooleanField(default=False)),
                ('technical_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('financial_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bidder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='dashboard.organization')),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='dashboard.tender')),
            ],
            options={
                'ordering': ['tender', 'bid_amount'],
                'indexes': [models.Index(fields=['tender'], name='dashboard_t_tender__e12752_idx'), models.Index(fields=['bidder'], name='dashboard_t_bidder__a9ceac_idx'), models.Index(fields=['is_winner'], name='dashboard_t_is_winn_d4ebb2_idx')],
                'unique_together': {('tender', 'bidder')},
            },
        ),
        migrations.AddIndex(
            model_name='tender',
            index=models.Index(fields=['tender_id'], name='dashboard_t_tender__a35084_idx'),
        ),
        migrations.AddIndex(
            model_name='tender',
            index=models.Index(fields=['status'], name='dashboard_t_status_39d8cd_idx'),
        ),
        migrations.AddIndex(
            model_name='tender',
            index=models.Index(fields=['publication_date'], name='dashboard_t_publica_442d5e_idx'),
        ),
        migrations.AddIndex(
            model_name='tender',
            index=models.Index(fields=['buyer'], name='dashboard_t_buyer_i_355b3d_idx'),
        ),
        migrations.AddIndex(
            model_name='tender',
            index=models.Index(fields=['winner'], name='dashboard_t_winner__9c1195_idx'),
        ),
        migrations.AddIndex(
            model_name='riskscore',
            index=models.Index(fields=['risk_level'], name='dashboard_r_risk_le_f8fe5b_idx'),
        ),
        migrations.AddIndex(
            model_name='riskscore',
            index=models.Index(fields=['total_risk_score'], name='dashboard_r_total_r_317c3b_idx'),
        ),
        migrations.AddIndex(
            model_name='riskscore',
            index=models.Index(fields=['analysis_date'], name='dashboard_r_analysi_451d78_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['organization_type'], name='dashboard_o_organiz_5d55e5_idx'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['district'], name='dashboard_o_distric_4ba1ec_idx'),
        ),
    ]
